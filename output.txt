a1
a2
output
# Tuning hyper-parameters for cohen_kappa_score
()
Best parameters set found on training set:
()
{'kernel': 'rbf', 'C': 1.0, 'gamma': 0.1}
()
Grid scores on training set:
()
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1.0, 'gamma': 0.1}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1.0, 'gamma': 0.03593813663804628}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1.0, 'gamma': 0.01291549665014884}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1.0, 'gamma': 0.004641588833612782}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1.0, 'gamma': 0.0016681005372000592}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1.0, 'gamma': 0.0005994842503189409}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1.0, 'gamma': 0.00021544346900318845}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1.0, 'gamma': 7.742636826811278e-05}
0.852 (+/-0.800) for {'kernel': 'rbf', 'C': 1.0, 'gamma': 2.782559402207126e-05}
0.852 (+/-0.800) for {'kernel': 'rbf', 'C': 1.0, 'gamma': 1e-05}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 4.0, 'gamma': 0.1}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 4.0, 'gamma': 0.03593813663804628}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 4.0, 'gamma': 0.01291549665014884}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 4.0, 'gamma': 0.004641588833612782}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 4.0, 'gamma': 0.0016681005372000592}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 4.0, 'gamma': 0.0005994842503189409}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 4.0, 'gamma': 0.00021544346900318845}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 4.0, 'gamma': 7.742636826811278e-05}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 4.0, 'gamma': 2.782559402207126e-05}
0.852 (+/-0.800) for {'kernel': 'rbf', 'C': 4.0, 'gamma': 1e-05}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 16.0, 'gamma': 0.1}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 16.0, 'gamma': 0.03593813663804628}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 16.0, 'gamma': 0.01291549665014884}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 16.0, 'gamma': 0.004641588833612782}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 16.0, 'gamma': 0.0016681005372000592}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 16.0, 'gamma': 0.0005994842503189409}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 16.0, 'gamma': 0.00021544346900318845}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 16.0, 'gamma': 7.742636826811278e-05}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 16.0, 'gamma': 2.782559402207126e-05}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 16.0, 'gamma': 1e-05}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 64.0, 'gamma': 0.1}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 64.0, 'gamma': 0.03593813663804628}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 64.0, 'gamma': 0.01291549665014884}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 64.0, 'gamma': 0.004641588833612782}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 64.0, 'gamma': 0.0016681005372000592}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 64.0, 'gamma': 0.0005994842503189409}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 64.0, 'gamma': 0.00021544346900318845}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 64.0, 'gamma': 7.742636826811278e-05}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 64.0, 'gamma': 2.782559402207126e-05}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 64.0, 'gamma': 1e-05}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 256.0, 'gamma': 0.1}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 256.0, 'gamma': 0.03593813663804628}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 256.0, 'gamma': 0.01291549665014884}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 256.0, 'gamma': 0.004641588833612782}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 256.0, 'gamma': 0.0016681005372000592}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 256.0, 'gamma': 0.0005994842503189409}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 256.0, 'gamma': 0.00021544346900318845}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 256.0, 'gamma': 7.742636826811278e-05}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 256.0, 'gamma': 2.782559402207126e-05}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 256.0, 'gamma': 1e-05}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1024.0, 'gamma': 0.1}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1024.0, 'gamma': 0.03593813663804628}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1024.0, 'gamma': 0.01291549665014884}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1024.0, 'gamma': 0.004641588833612782}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1024.0, 'gamma': 0.0016681005372000592}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1024.0, 'gamma': 0.0005994842503189409}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1024.0, 'gamma': 0.00021544346900318845}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1024.0, 'gamma': 7.742636826811278e-05}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1024.0, 'gamma': 2.782559402207126e-05}
1.000 (+/-0.000) for {'kernel': 'rbf', 'C': 1024.0, 'gamma': 1e-05}
()
()
CCP validity:
.
.
.
.
.
Total execution time:
0.624396085739
